@model Doanphanmem.Models.KhachHang

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Thông Tin Người Dùng</title>
    <style>
        .container {
            display: grid;
            grid-template-columns: 300px 300px 300px;
            grid-gap: 50px;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f5f5f5;
            font-family: 'Baloo Paaji 2', cursive;
        }

        .card {
            height: 37rem;
            border-radius: 5px;
            display: flex;
            flex-direction: column;
            align-items: center;
            box-shadow: rgba(0, 0, 0, 0.7);
            color: white;
            float: right;
            margin-right: 450px;
            margin-top: 100px;
        }

        .card__name {
            margin-top: 15px;
            font-size: 1.5em;
            color: black;
            font-weight: bold;
        }

        .card__image {
            height: 160px;
            width: 160px;
            border-radius: 50%;
            border: 5px solid #5a5a5b;
            margin-top: 160px;
            float: left;
            margin-left: 400px;
        }



        .draw-border::after {
            border-top-width: 4px;
            border-right-width: 4px;
        }

        .draw-border:hover {
            color: #00f7ff;
        }

            .draw-border:hover::before,
            .draw-border:hover::after {
                border-color: #eb196e;
                -webkit-transition: border-color 0s, width 0.25s, height 0.25s;
                transition: border-color 0s, width 0.25s, height 0.25s;
                width: 100%;
                height: 100%;
            }

            .draw-border:hover::before {
                -webkit-transition-delay: 0s, 0s, 0.25s;
                transition-delay: 0s, 0s, 0.25s;
            }

            .draw-border:hover::after {
                -webkit-transition-delay: 0s, 0.25s, 0s;
                transition-delay: 0s, 0.25s, 0s;
            }

        .btn {
            background: none;
            border: none;
            cursor: pointer;
            line-height: 1.5;
            font: 700 1.0rem 'Roboto Slab', sans-serif;
            padding: 0.75em 2em;
            letter-spacing: 0.05rem;
            margin: 1em;
            width: 13rem;
            padding-left: 32px;
            background-color: #f9f9f9;
            text-align: center;
        }

            .btn:focus {
                outline: 2px dotted #00f7ff;
            }


        .social-icons {
            padding: 0;
            list-style: none;
            margin: 1em;
        }

            .social-icons li {
                display: inline-block;
                margin: 0.15em;
                position: relative;
                font-size: 1em;
            }

            .social-icons i {
                color: #fff;
                position: absolute;
                top: 0.95em;
                left: 0.96em;
                transition: all 265ms ease-out;
            }

        .name {
            color: black;
            margin-left: -140px;
        }
        .name_p{
            float:right;
        }
    </style>
</head>
<body>

    <div style="border-right-color">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.MaKH)


            @Html.HiddenFor(model => model.TK, new { htmlAttributes = new { @class = "form-control" } })


            @Html.HiddenFor(model => model.Pass, new { htmlAttributes = new { @class = "form-control" } })


            @Html.HiddenFor(model => model.Roleuser, new { htmlAttributes = new { @class = "form-control" } })

            <div style="border-radius: 10px;">
                <img src="https://lh3.googleusercontent.com/ytP9VP86DItizVX2YNA-xTYzV09IS7rh4WexVp7eilIcfHmm74B7odbcwD5DTXmL0PF42i2wnRKSFPBHlmSjCblWHDCD2oD1oaM1CGFcSd48VBKJfsCi4bS170PKxGwji8CPmehwPw=w200-h247-no" alt="Person" class="card__image">
                <div class="card">
                    <p class="card__name" style="margin-right:50px;">Thông tin chi tiết người dùng</p>
                    <div>
                        <p class="name">
                            Tên người dùng:
                            <span class="name_p">
                                @Html.EditorFor(model => model.TenKH, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TenKH, "", new { @class = "text-danger" })
                            </span>
                        </p>
                        <p class="name">
                            Số điện thoại:
                            <span class="name_p">
                                @Html.EditorFor(model => model.sdt, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.sdt, "", new { @class = "text-danger" })
                            </span>
                        </p>
                        <p class="name">
                            Địa chỉ:
                            <span class="name_p">
                                @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
                            </span>
                        </p>
                        <p class="name">
                            Email:
                            <span class="name_p">
                                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                            </span>
                        </p>
                        <p class="name">
                            Ngày Sinh:
                            <span class="name_p">
                                @Html.EditorFor(model => model.NgaySinh, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger" })
                            </span>
                        </p>
                        <p class="name">
                            Hình ảnh:
                            <span class="name_p">
                                @Html.EditorFor(model => model.Hinh, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Hinh, "", new { @class = "text-danger" })
                            </span>
                        </p>

                    </div>
                    <button class="btn draw-border">Lưu Thông Tin</button>
                </div>
            </div>
        }
    </div>
</body>
</html>
